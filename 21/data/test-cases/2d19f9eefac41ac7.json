{
  "uid" : "2d19f9eefac41ac7",
  "name" : "test_registration",
  "fullName" : "test.test_registration.TestConduitRegistration#test_registration",
  "historyId" : "d7a7c3807200223a3b9a43ee8c1064ac",
  "time" : {
    "start" : 1628956933046,
    "stop" : 1628956934515,
    "duration" : 1469
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!",
  "statusTrace" : "self = <test_registration.TestConduitRegistration object at 0x7ff3959fdd60>\n\n    def test_registration(self):\n        sign_up = self.browser.find_element_by_xpath('//a[@href=\"#/register\"]').click()\n        username = self.browser.find_element_by_xpath('//input[@placeholder=\"Username\"]')\n        email = self.browser.find_element_by_xpath('//input[@placeholder=\"Email\"]')\n        password = self.browser.find_element_by_xpath('//input[@placeholder=\"Password\"]')\n    \n    # egyedi felhasználónevet generál, mivel az ezredmásodpercet is figyelembe veszi\n        uniq_name = \"Pepi\" + str(datetime.datetime.now().strftime(\"%Y-%m-%d_%H-%M-%S-%f\")).replace('-', '').replace('_', '')\n        print(uniq_name)\n        username.send_keys(uniq_name)\n        email.send_keys(uniq_name + \"@hotmail.com\")\n        pw = \"Pepi1234!$\"\n        password.send_keys(pw)\n    \n        sign_up_button = self.browser.find_element_by_xpath('//button[@class=\"btn btn-lg btn-primary pull-xs-right\"]').click()\n        time.sleep(1)\n        success = self.browser.find_element_by_xpath('//*[@class=\"swal-text\"]')\n>       assert success.text == \"Your registration was successful!\"\nE       AssertionError: assert '' == 'Your registr...s successful!'\nE         - Your registration was successful!\n\ntest/test_registration.py:37: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '' == 'Your registr...s successful!'\n  - Your registration was successful!",
    "statusTrace" : "self = <test_registration.TestConduitRegistration object at 0x7ff3959fdd60>\n\n    def test_registration(self):\n        sign_up = self.browser.find_element_by_xpath('//a[@href=\"#/register\"]').click()\n        username = self.browser.find_element_by_xpath('//input[@placeholder=\"Username\"]')\n        email = self.browser.find_element_by_xpath('//input[@placeholder=\"Email\"]')\n        password = self.browser.find_element_by_xpath('//input[@placeholder=\"Password\"]')\n    \n    # egyedi felhasználónevet generál, mivel az ezredmásodpercet is figyelembe veszi\n        uniq_name = \"Pepi\" + str(datetime.datetime.now().strftime(\"%Y-%m-%d_%H-%M-%S-%f\")).replace('-', '').replace('_', '')\n        print(uniq_name)\n        username.send_keys(uniq_name)\n        email.send_keys(uniq_name + \"@hotmail.com\")\n        pw = \"Pepi1234!$\"\n        password.send_keys(pw)\n    \n        sign_up_button = self.browser.find_element_by_xpath('//button[@class=\"btn btn-lg btn-primary pull-xs-right\"]').click()\n        time.sleep(1)\n        success = self.browser.find_element_by_xpath('//*[@class=\"swal-text\"]')\n>       assert success.text == \"Your registration was successful!\"\nE       AssertionError: assert '' == 'Your registr...s successful!'\nE         - Your registration was successful!\n\ntest/test_registration.py:37: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "747005a392838b1f",
      "name" : "log",
      "source" : "747005a392838b1f.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "a7657cb95b7adb6f",
      "name" : "stdout",
      "source" : "a7657cb95b7adb6f.txt",
      "type" : "text/plain",
      "size" : 25
    }, {
      "uid" : "d40005920e513c05",
      "name" : "stderr",
      "source" : "d40005920e513c05.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_registration"
  }, {
    "name" : "subSuite",
    "value" : "TestConduitRegistration"
  }, {
    "name" : "host",
    "value" : "fv-az42-898"
  }, {
    "name" : "thread",
    "value" : "3732-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_registration"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "2d19f9eefac41ac7.json",
  "parameterValues" : [ ]
}